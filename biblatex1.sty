% $Id: biblatex.sty,v 1.7 2011/11/13 19:09:07 lehman stable $

% Copyright (c) 2006-2011 Philipp Lehman.
%
% Permission is granted to copy, distribute and/or modify this
% software under the terms of the LaTeX Project Public License
% (LPPL), version 1.3.
%
% The LPPL maintenance status of this software is
% 'author-maintained'.
%
% This software is provided 'as is', without warranty of any kind,
% either expressed or implied, including, but not limited to, the
% implied warranties of merchantability and fitness for a
% particular purpose.

\NeedsTeXFormat{LaTeX2e}[2005/12/01]
\ProvidesPackage{biblatex1}
[\abx@date\space v\abx@version\space programmable bibliographies (bibtex) (PK/JW/AB)]

%% Dependencies

\RequirePackage{etoolbox}
\RequirePackage{keyval}
\RequirePackage{logreq}
\RequirePackage{ifthen}
\RequirePackage{url}

\@ifpackagelater{etoolbox}{2010/11/29}
  {}
  {\PackageError{biblatex}
     {Outdated 'etoolbox' package}
     {Upgrade to etoolbox v2.1 (2010/11/29) or later.\MessageBreak
      I found: '\csuse{ver@etoolbox.sty}'.\MessageBreak
      This is a fatal error. I'm aborting now.}%
   \endinput}

%% Category codes

\def\blx@docatcodes{%
  \do\=\do\<\do\>\do\-\do\"\do\'\do\`\do\.%
  \do\,\do\;\do\:\do\!\do\?\do\/}
\def\do#1{\catcode\number`#1=\the\catcode`#1\relax}
\edef\blx@catcodes{\blx@docatcodes\do\^\do\~\do\&\do\|}
\let\do\noexpand

\def\blx@saneccodes{%
  \catcode`\~=\active
  \let\do\@makeother
  \blx@docatcodes
  \let\do\noexpand}

\blx@saneccodes
\catcode`\&=3
\catcode`\|=3
\catcode`\^=7
\def\blx@nl{^^J}

%% Compatibility

\AtEndPreamble{%
  \def\do#1{%
    \@ifpackageloaded{#1}
      {\blx@error
         {Incompatible package '#1'}
         {The '#1' package and biblatex are incompatible}}
      {}}%
  \docsvlist{%
    amsrefs,apacite,babelbib,backref,bibtopic,bibunits,chapterbib,
    cite,citeref,drftcite,footbib,inlinebib,jurabib,mcite,mciteplus,
    mlbib,multibbl,multibib,natbib,opcit,overcite,splitbib,ucs}%
  \@ifpackageloaded{babel}
    {\iftoggle{blx@autolang}
       {\blx@mkbabel}
       {\blx@mknobabel}}
    {\blx@mknobabel}%
  \csuse{abx@extras@\blx@languagename}%
  \csuse{abx@strings@\blx@languagename}%
  \undef\blx@mkbabel
  \undef\blx@mknobabel
  \ifnum\blx@hyperref=\z@
    \blx@mknohyperref
  \else
    \@ifpackageloaded{hyperref}
      {\blx@mkhyperref}
      {\ifnum\blx@hyperref=\@ne
         \blx@warning@noline{%
           Missing 'hyperref' package.\MessageBreak
           Setting hyperref=false}%
       \fi
       \blx@mknohyperref}%
  \fi
  \providecommand*{\nolinkurl}{\url}%
  \undef\blx@mkhyperref
  \undef\blx@mknohyperref
  \ifundef\TE@hook
    {\let\TE@hook\@empty
     \toggletrue{blx@tempa}%
     \def\do#1{%
       \patchcmd#1%
         {\let\isundefined\TE@undef}
         {\let\isundefined\TE@undef\TE@hook}
         {\togglefalse{blx@tempa}\listbreak}
         {}}%
     \docsvlist{%
       \ifthenelse,%          ifthen
       \org@ifthenelse,%      babel
       \HyOrg@ifthenelse,%    hyperref
       \NROrg@ifthenelse}%    nameref
     \iftoggle{blx@tempa}
       {\blx@err@patch{'ifthen' package}}
       {}}
    {}%
  \appto\TE@hook{\blx@TE@hook}%
  \toggletrue{blx@tempa}%
  \def\do#1{%
    \patchcmd#1%
      {\color@begingroup}
      {\color@begingroup\toggletrue{blx@footnote}}
      {\togglefalse{blx@tempa}\listbreak}
      {}}%
  \docsvlist{%
    \@footnotetext,%          latex
    \H@@footnotetext,%        hyperref
    \V@@footnotetext,%        fancyvrb
    \scr@saved@footnotetext,% koma-script 3.x
    \l@dold@footnotetext,%    ledmac
    \l@doldold@footnotetext,% ledmac
    \@fntORI}%                frenchle
  \iftoggle{blx@tempa}%       ams classes
    {\patchcmd\@footnotetext
       {\@makefntext}
       {\toggletrue{blx@footnote}\@makefntext}
       {\togglefalse{blx@tempa}}
       {}}
    {}%
  \@ifclassloaded{memoir}
    {\def\do#1{%
       \patchcmd#1%
	 {\color@begingroup}
	 {\color@begingroup\toggletrue{blx@footnote}}
	 {}
	 {}}%
     \docsvlist{%
       \m@mold@footnotetext,%
       \@plainfootnotetext,%
       \@twocolfootnotetext,%
       \@threecolfootnotetext,%
       \@parafootnotetext}%
     \def\do#1{%
       \patchcmd#1%
	 {\color@begingroup\@makefntext}
	 {\color@begingroup\toggletrue{blx@footnote}\@makefntext}
	 {}
	 {}}%
     \docsvlist{%
       \@footnotetext,% patch twice
       \@plainfootnotetext}}
    {}%
  \iftoggle{blx@tempa}
    {\blx@warning@noline{%
       Patching footnotes failed.\MessageBreak
       Footnote detection will not work}}
    {}%
  \@ifpackageloaded{endnotes}
    {\patchcmd\theendnotes
       {\enoteformat}
       {\toggletrue{blx@footnote}\enoteformat}
       {}
       {\blx@err@patch{'endnotes' package}}}
    {}%
  \@ifpackageloaded{bigfoot}
    {\apptocmd\@makefnstartbox
       {\toggletrue{blx@footnote}}
       {}
       {\blx@err@patch{'bigfoot' package}}}
    {}%
  \@ifpackageloaded{showkeys}
    {\ifdef\SK@
       {\AtEveryBibitem{\SK@\SK@@label{\thefield{entrykey}}}%
        \AtEveryLositem{\SK@\SK@@label{\thefield{entrykey}}}%
        \ifundef\SK@cite % = 'notcite' disabled
          {\AtEveryCitekey{\SK@\SK@@ref{\thefield{entrykey}}}}
          {}}
       {}}
    {}%
  \apptocmd\@floatboxreset
    {\boolfalse{citetracker}%
     \boolfalse{pagetracker}}
    {}
    {\blx@err@patch{floats}}%
  \ifdef\TX@endtabularx % tabularx/memoir
    {\pretocmd\TX@endtabularx
      {\addtocounter{tabx@nest}{1}}% track nestes tabularx environments
      {}
      {\blx@err@patch{'tabularx'}}%
      % no need to conditionalise on top-level tabx as the search/replace
      % will only match once anyway
     \patchcmd\TX@endtabularx
      {\edef\TX@ckpt{\cl@@ckpt}}
      {\edef\TX@ckpt{\cl@@ckpt\abx@resttrackers}%
        \abx@savetrackers}
      {}
      {\blx@err@patch{'tabularx'}}%
     \apptocmd\TX@endtabularx
      {\ifnum\value{tabx@nest}=1% only clear trackers for top-level tabularx
        \abx@cleartrackers
        \fi
        \addtocounter{tabx@nest}{-1}}
      {}
      {\blx@err@patch{'tabularx'}}}
    {}%
  \@ifpackageloaded{csquotes}
    {\@ifpackagelater{csquotes}{2009/05/30}
       {}
       {\blx@error
          {Outdated 'csquotes' package}
          {Upgrade to csquotes v4.4 (2009/05/30) or later.\MessageBreak
           I found: '\csuse{ver@csquotes.sty}'}}%
     \BlockquoteDisable{\let\blx@thecheckpunct\@gobble}%
     \@ifpackagelater{csquotes}{2009/08/27}
       {\appto\@blockquote@prehook{\abx@savetrackers}%
        \appto\@blockquote@posthook{\abx@resttrackers\abx@cleartrackers}}
       {}%
     \@ifpackagelater{csquotes}{2010/06/09}
       {}
       {\newcommand*{\@quotereset}{}\newcount\@quotereset}}
    {\@ifpackageloaded{babel}
       {\blx@warning@noline{%
          'babel' detected but 'csquotes' missing.\MessageBreak
          Loading 'csquotes' recommended}}
       {}%
     \newcommand*{\@quotelevel}{}%
     \newcount\@quotelevel
     \newcommand*{\@quotereset}{}%
     \newcount\@quotereset
     \newcommand*{\@setquotesfcodes}{}%
     \let\@setquotesfcodes\relax
     \newrobustcmd*{\initoquote}{\@quotelevel\@ne}%
     \newrobustcmd*{\initiquote}{\@quotelevel\tw@}%
     \newrobustcmd*{\textooquote}{``}%
     \newrobustcmd*{\textcoquote}{''}%
     \newrobustcmd*{\textoiquote}{`\relax}% block ligs
     \newrobustcmd*{\textciquote}{'\relax}% block ligs
     \newrobustcmd*{\enquote}{\@ifstar\blx@enquote@ii\blx@enquote}%
     \def\blx@enquote{%
       \ifnum\@quotelevel>\z@
         \expandafter\blx@enquote@ii
       \else
         \expandafter\blx@enquote@i
       \fi}%
     \long\def\blx@enquote@i#1{%
       \begingroup\initoquote
       \textooquote#1\textcoquote
       \endgroup}%
     \long\def\blx@enquote@ii#1{%
       \begingroup\initiquote
       \textoiquote#1\textciquote
       \endgroup}%
     \appto\blx@setsfcodes{%
       \sfcode`\`=\z@
       \sfcode`\'=\z@}}%
  \let\do\noexpand}

\begingroup
\@makeother\#
% \relax: gobble newline -> titletoc.sty
\AtEndPreamble{%
  \addtocontents{toc}{%
     \boolfalse{citerequest}%
     \boolfalse{citetracker}%
     \boolfalse{pagetracker}%
     \boolfalse{backtracker}\relax}%
  \addtocontents{lof}{%
     \boolfalse{citerequest}%
     \boolfalse{citetracker}%
     \boolfalse{pagetracker}%
     \boolfalse{backtracker}\relax}%
  \addtocontents{lot}{%
     \boolfalse{citerequest}%
     \boolfalse{citetracker}%
     \boolfalse{pagetracker}%
     \boolfalse{backtracker}\relax}%
  \patchcmd\addtocontents
    {\string\@writefile}
    {\string\@writefile{#1}{\defcounter{refsection}{\the\c@refsection}\relax}%
     \string\@writefile}
    {}
    {\blx@err@patch{\string\addtocontents}}}
\endgroup

% trick hyperref into believing we're natbib
\let\NAT@parse\@empty
% trick showkeys into believing we're havard
\let\HAR@checkdef\@empty

%% Allocation

\providecommand{\@gobblefive}[5]{}

% Counter to track nested tabularx environemnts so we don't
% try to patch the commands more than once below as this undefs some
% macros and an error is thrown
\newcounter{tabx@nest}
\setcounter{tabx@nest}{0}

\newcounter{listtotal}
\def\thelisttotal{\the\c@listtotal}
\newcounter{listcount}
\def\thelistcount{\the\c@listcount}
\newcounter{liststart}
\def\theliststart{\the\c@liststart}
\newcounter{liststop}
\def\theliststop{\the\c@liststop}
\newcounter{citecount}
\def\thecitecount{\the\c@citecount}
\newcounter{citetotal}
\def\thecitetotal{\the\c@citetotal}
\newcounter{multicitecount}
\def\themulticitecount{\the\c@multicitecount}
\newcounter{multicitetotal}
\def\themulticitetotal{\the\c@multicitetotal}
\newcounter{instcount}
\def\theinstcount{\the\c@instcount}
\newcounter{maxnames}
\def\themaxnames{\the\c@maxnames}
\newcounter{minnames}
\def\theminnames{\the\c@minnames}
\newcounter{maxitems}
\def\themaxitems{\the\c@maxitems}
\newcounter{minitems}
\def\theminitems{\the\c@minitems}
\newcounter{citecounter}
\def\thecitecount{\the\c@citecounter}
\newcounter{savedcitecounter}
\def\thecitecount{\the\c@savedcitecounter}
\newcounter{uniquelist}
\def\theuniquelist{\the\c@uniquelist}
\newcounter{uniquename}
\def\theuniquename{\the\c@uniquename}
\newcounter{refsection}
\def\therefsection{\the\c@refsection}
\newcounter{refsegment}
\def\therefsegment{\the\c@refsegment}
\newcounter{maxextrayear}
\def\themaxextrayear{\the\c@maxextrayear}
\newcounter{maxextraalpha}
\def\themaxextraalpha{\the\c@maxextraalpha}
\newcounter{abbrvpenalty}
\def\theabbrvpenalty{\the\c@abbrvpenalty}
\newcounter{highnamepenalty}
\def\thehighnamepenalty{\the\c@highnamepenalty}
\newcounter{lownamepenalty}
\def\thelownamepenalty{\the\c@lownamepenalty}
\newcounter{maxparens}
\def\themaxparens{\the\c@maxparens}
\newcounter{parenlevel}
\def\theparenlevel{\the\c@parenlevel}

\newcount\blx@tempcnta
\newcount\blx@tempcntb
\newcount\blx@tempcntc
\newcount\blx@maxsection
\newcount\blx@maxsegment
\newcount\blx@notetype
\newcount\blx@parenlevel@text
\newcount\blx@parenlevel@foot

\def\blx@backend{0}
\def\blx@uniquename{0}
\def\blx@uniquelist{0}
\def\blx@maxbibnames{0}
\def\blx@minbibnames{0}
\def\blx@maxcitenames{0}
\def\blx@mincitenames{0}
\def\blx@maxbibnames@type{\blx@maxbibnames}
\def\blx@minbibnames@type{\blx@minbibnames}
\def\blx@maxcitenames@type{\blx@maxcitenames}
\def\blx@mincitenames@type{\blx@mincitenames}
\def\blx@maxalphanames{0}
\def\blx@minalphanames{0}
\def\blx@maxitems{0}
\def\blx@minitems{0}
\def\blx@maxitems@type{\blx@maxitems}
\def\blx@minitems@type{\blx@minitems}

\newlength{\labelnumberwidth}
\newlength{\labelalphawidth}
\newlength{\shorthandwidth}
\newlength{\biblabelsep}
\ifdef\bibitemsep % memoir
  {}
  {\newlength{\bibitemsep}}
\newlength{\bibnamesep}
\newlength{\bibinitsep}
\newlength{\bibparsep}
\newlength{\bibhang}

\newbool{citetracker}
\newbool{pagetracker}
\newbool{backtracker}
\newbool{citerequest}
\booltrue{citerequest}

\newtoggle{blx@tempa}
\newtoggle{blx@tempb}
\newtoggle{blx@runltx}
\newtoggle{blx@runbtx}
\newtoggle{blx@block}
\newtoggle{blx@unit}
\newtoggle{blx@skipentry}
\newtoggle{blx@insert}
\newtoggle{blx@lastins}
\newtoggle{blx@debug}
\newtoggle{blx@sortcase}
\newtoggle{blx@sortupper}
\newtoggle{blx@autolang}
\newtoggle{blx@clearlang}
\newtoggle{blx@defernumbers}
\newtoggle{blx@omitnumbers}
\newtoggle{blx@footnote}
\newtoggle{blx@labelalpha}
\newtoggle{blx@labelnumber}
\newtoggle{blx@labelyear}
\newtoggle{blx@natbib}
\newtoggle{blx@mcite}
\newtoggle{blx@loadfiles}
\newtoggle{blx@singletitle}
\newtoggle{blx@terseinits}
\newtoggle{blx@firstinits}
\newtoggle{blx@useauthor}
\newtoggle{blx@useeditor}
\newtoggle{blx@usetranslator}
\newtoggle{blx@useprefix}
\newtoggle{blx@addset}
\newtoggle{blx@setonly}
\newtoggle{blx@dataonly}
\newtoggle{blx@skipbib}
\newtoggle{blx@skiplos}
\newtoggle{blx@skiplab}
\newtoggle{blx@citation}
\newtoggle{blx@bibliography}
\newtoggle{blx@reencode}
\newtoggle{blx@citeindex}
\newtoggle{blx@bibindex}

\newread\blx@auxin
\newwrite\blx@auxout

\def\blx@onlypreamble#1{%
  \gappto\blx@dopreamblecmds{\do#1}}

\def\blx@dopreamblecmds{%
  \do\blx@dopreamblecmds
  \do\blx@onlypreamble}

%% Initialization

\def\blx@blxinit{%
  \let\blx@blxinit\relax
  \blx@initunit}

\edef\blx@auxfile@bibtex{\jobname}
\let\blx@auxout@bibtex\@mainaux
\newcommand*{\labelalphaothers}{+}
\newcommand*{\sortalphaothers}{\labelalphaothers}
\newcommand*{\blxauxsuffix}{-blx}

\begingroup
\def\blx@tempa#1"#2{%
  #1\ifx#2\@empty\else
    \expandafter\blx@tempa
  \fi#2}
\edef\blx@ctrlfile@bibtex{%
  \noexpand\blx@tempa
  \expandafter\blx@tempa\jobname"\@empty
  \space\noexpand\@empty}
\def\blx@tempa#1 #2{%
  #1\ifx#2\@empty\else
    \string_\expandafter\blx@tempa
  \fi#2}
\xdef\blx@ctrlfile@bibtex{\blx@ctrlfile@bibtex}
\endgroup

\def\blx@secinit{%
  \ifcsundef{blx@sort@\the\c@refsection}
    {\global\cslet{blx@sort@\the\c@refsection}\@empty}
    {}%
  \ifcsundef{blx@sbib@\the\c@refsection}
    {\global\cslet{blx@sbib@\the\c@refsection}\@empty}
    {}%
  \ifcsundef{blx@bsee@\the\c@refsection}
    {\global\cslet{blx@bsee@\the\c@refsection}\@empty}
    {}%
  \ifcsundef{blx@fsee@\the\c@refsection}
    {\global\cslet{blx@fsee@\the\c@refsection}\@empty}
    {}%
  \ifcsundef{blx@losh@\the\c@refsection}
    {\global\cslet{blx@losh@\the\c@refsection}\@empty}
    {}%
  \blx@ibidreset@force
  \blx@idemreset@force
  \blx@opcitreset@force
  \blx@loccitreset@force
  \ifcsundef{blx@segm@\the\c@refsection @\the\c@refsegment}
    {\global\cslet{blx@segm@\the\c@refsection @\the\c@refsegment}\@empty}
    {}}

%% Auxiliary commands

\protected\def\blx@safe@actives{%
  \let\blx@if@safe@actives\if@safe@actives
  \let\if@safe@actives\iftrue}

\protected\def\blx@rest@actives{%
  \let\if@safe@actives\blx@if@safe@actives}

\protected\def\blx@regimc#1{%
  \xappto\blx@blxinit{%
    \let\noexpand#1\expandafter\noexpand\csname
    blx@imc@\expandafter\@gobble\string#1\endcsname}}

\protected\def\blx@regimcs#1{\blx@regimcs@i#1&}
\def\blx@regimcs@i#1{%
  \ifx#1&\else
    \blx@regimc#1%
    \expandafter\blx@regimcs@i
  \fi}

% {<field>} => \do{<item1>}\do{<item2>}...

\def\blx@imc@docsvfield#1{%
  \blx@imc@iffieldundef{#1}
    {}
    {\expandafter\expandafter\expandafter\docsvlist
     \expandafter\expandafter\expandafter{%
       \csname abx@field@#1\endcsname}}}

% {<handler>}{<field>} => <handler>{<item1>}<handler>{<item2>}...

\def\blx@imc@forcsvfield#1#2{%
  \blx@imc@iffieldundef{#2}
    {}
    {\expandafter\expandafter\expandafter\blx@imc@forcsvfield@i
     \expandafter\expandafter\expandafter{%
       \csname abx@field@#2\endcsname}{#1}}}

\def\blx@imc@forcsvfield@i#1#2{\forcsvlist{#2}{#1}}

\blx@regimcs{\docsvfield \forcsvfield}

% {<list>|<listmacro>}

\protected\long\def\blx@listloop#1{%
  \expandafter\blx@listloop@i#1|&}
\long\def\blx@listloop@i#1|{%
  \ifblank{#1}
    {\blx@break}
    {\blx@do{#1}\blx@listloop@i}}

\long\def\blx@break#1&{%
  \blx@done
  \undef\blx@do
  \undef\blx@done}

% {<listmacro>}{<listcsname>} => matches in <listmacro>

\protected\def\blx@filter#1#2{%
  \def\do##1{%
    \ifinlistcs{##1}{#2}
      {\listadd#1{##1}}
      {}}%
  \blx@runfilter#1}

% {<listmacro>}{<listcsname>} => matches in <listmacro>
% Slightly odd use of filtering to do citation sorting.
% Same as blx@filter but it keeps \tempcnta in step with the
% resulting number of things in the filtered list. This is
% because \tempcnta is used to set citetotal - this use
% of filtering for cite sorting has the side-effect of stripping
% duplicated like \cite{foo,foo} but we need then to keep citetotal
% in sync.

\protected\def\blx@filtercitesort#1#2{%
 \blx@tempcnta\z@
 \def\do##1{%
   \ifinlistcs{##1}{#2}
     {\listadd#1{##1}%
      \advance\blx@tempcnta\@ne}
     {}}%
 \blx@runfilter#1}

% {<listmacro>}{<listcsname>} => neg. matches in <listmacro>

\protected\def\blx@notfilter#1#2{%
  \def\do##1{%
    \ifinlistcs{##1}{#2}
      {}
      {\listadd#1{##1}}}%
  \blx@runfilter#1}

\def\blx@runfilter#1{%
  \begingroup\edef#1{\endgroup
    \unexpanded{\let#1\@empty\dolistloop}{#1}}%
  #1\let\do\noexpand}

% {<code>}{<string>} => <code>{<string>}

\protected\def\blx@xsanitizeafter#1#2{%
  \begingroup
  \abx@hook@xsanitize
  \def\blx@tempa{\endgroup#1}%
  \edef\blx@tempb{#2}%
  \expandafter\blx@tempa
  \expandafter{\detokenize\expandafter{\blx@tempb}}}

\def\abx@hook@xsanitize{%
  \blx@safe@actives
  \let\protect\string}

% {<code>}{<string>} => <code>{<string>}

\begingroup
\catcode`\<=\active
\catcode`\>=\active
\catcode`\&=\active
\catcode`\"=\active
\catcode`\'=\active
\protected\gdef\blx@xmlsanitizeafter#1#2{%
  \begingroup
  \abx@hook@xsanitize
  \def\blx@tempa{\endgroup#1}%
  \edef\blx@tempb{#2}%
  \let\do\@makeother
  \dospecials
  \catcode`\<=\active
  \catcode`\>=\active
  \catcode`\&=\active
  \catcode`\"=\active
  \catcode`\'=\active
  \edef<{\string<\string;}%
  \edef>{\string>\string;}%
  \edef&{\string&\string;}%
  \edef"{\string"\string;}%
  \edef'{\string&apos\string;}%
  \endlinechar\m@ne
  \everyeof{\noexpand}%
  \edef\blx@tempb{\scantokens\expandafter{\blx@tempb}}%
  \expandafter\blx@tempa
  \expandafter{\detokenize\expandafter{\blx@tempb}}}
\endgroup

% {<file>}{<message>}{<preload>}{<postload>}{<success>}{<failure>}

\protected\long\def\blx@inputonce#1#2#3#4#5#6{%
  \ifcsundef{blx@file@#1}
    {\blx@info@noline{Trying to load #2..}%
     \IfFileExists{#1}
       {\blx@info@noline{... file '#1' found}%
        \listxadd\blx@list@req@stat{#1}%
        #3\@@input\@filef@und#4#5}
       {\blx@info@noline{... file '#1' not found}#6}%
     \global\csdef{blx@file@#1}{}%
     \@addtofilelist{#1}}
    {#5}}

% {<write>}{<precode>}{<string>}

\protected\def\blx@auxwrite#1#2#3{%
  \if@filesw
    \begingroup
    \blx@safe@actives
    \let\protect\string
    #2%
    \immediate\write#1{#3}%
    \endgroup
  \fi}

\def\blx@auxinit@bibtex#1{%
  \blx@auxwrite\blx@auxout@bibtex
    {\def\do##1{,\blx@stripbib{##1}}}
    {\ifx\blx@auxout@bibtex\@mainaux
     \else
       \blx@msg@aux
     \fi
     \string\bibstyle{biblatex}\blx@nl
     \string\bibdata{%
       \blx@ctrlfile@bibtex\blxauxsuffix
       \ifx#1\@empty
       \else
         \dolistloop#1%
       \fi}\blx@nl
     \string\citation{biblatex-control}}}

% {<file>}{<signature>}{<true>}{<false>}

\def\blx@ifsigned#1#2{%
  \begingroup
  \let\blx@tempa\@firstoftwo
  \edef\blx@tempb{\csuse{blx@sig@#2}}%
  \edef\blx@tempb{\detokenize\expandafter{\blx@tempb}}%
  \openin\blx@auxin #1.#2\relax
    \ifeof\blx@auxin
    \else
      \endlinechar\m@ne
      \readline\blx@auxin to \blx@tempc
      \ifeof\blx@auxin
      \else
        \ifx\blx@tempb\blx@tempc
          \readline\blx@auxin to \blx@tempc
          \edef\blx@tempb{\csuse{blx@ver@#2}}%
          \edef\blx@tempb{\detokenize\expandafter{\blx@tempb}}%
          \ifx\blx@tempb\blx@tempc
          \else
            \blx@warning@noline{%
              File '#1.#2' created by wrong version}
          \fi
        \else
          \blx@error
            {File '#1.#2' not created by biblatex}
            {This file was apparently not created by biblatex.
             Rename it or\MessageBreak move it to a location were
             TeX will not find it. If this error\MessageBreak
             persists, consider redefining \string\blxauxsuffix.%
             See the biblatex\MessageBreak manual for details}%
          \let\blx@tempa\@secondoftwo
        \fi
      \fi
    \fi
  \closein\blx@auxin
  \expandafter\endgroup\blx@tempa}

\def\blx@sig@bib{@Comment{$ biblatex control file $}}
\edef\blx@ver@bib{@Comment{$ biblatex version \blx@bblversion\space $}}
\edef\blx@sig@aux{\@percentchar\space $ biblatex auxiliary file $}
\edef\blx@ver@aux{\@percentchar\space$ biblatex version \blx@bblversion\space $}
\let\blx@sig@bbl\blx@sig@aux
\let\blx@ver@bbl\blx@ver@aux
\edef\blx@sig@bcf{\detokenize{<?xml version="1.0" encoding="UTF-8"?>}}
\edef\blx@ver@bcf{%
  \detokenize{<bcf:controlfile version="}\blx@bblversion
  \detokenize{" xmlns:bcf="https://sourceforge.net/projects/biblatex">}}

\edef\blx@msg@aux{%
  \blx@sig@aux\blx@nl
  \blx@ver@aux\blx@nl
  \@percentchar\space Do not modify this file!\blx@nl
  \@percentchar\blx@nl
  \@percentchar\space This is an auxiliary file
  used by the 'biblatex' package.\blx@nl
  \@percentchar\space This file may safely be deleted.
  It will be recreated as\blx@nl
  \@percentchar\space required.\blx@nl
  \@percentchar\blx@nl\string\relax\blx@nl}
\edef\blx@msg@bib{%
  \blx@sig@bib\blx@nl
  \blx@ver@bib\blx@nl
  Do not modify this file!\blx@nl\blx@nl
  This is an auxiliary file used
  by the 'biblatex' package.\blx@nl
  This file may safely be deleted.
  It will be recreated as\blx@nl
  required.\blx@nl\blx@nl}

% {<true>}{<false>}

\newrobustcmd*{\lbx@ifutfinput}{\ifboolexpr{%
  test {\ifdefstring\inputencodingname{utf8}}
  or
  test {\ifdefstring\inputencodingname{utf8x}}
  or
  test {\ifdefstring\inputencodingname{lutf8}}
  or
  ( test {\ifundef\inputencodingname}
    and
    ( not test {\ifundef\XeTeXrevision}
      or
      not test {\ifundef\luatexversion}
    )
  )
}}

%% User feedback

\protected\def\blx@error#1#2{%
  \begingroup
  \blx@safe@actives
  \PackageError{biblatex}{#1}{#2.}%
  \endgroup}

\protected\def\blx@warning#1{%
  \begingroup
  \blx@safe@actives
  \PackageWarning{biblatex}{#1\blx@noline}%
  \endgroup}
\protected\def\blx@warning@noline#1{%
  \begingroup
  \blx@safe@actives
  \PackageWarningNoLine{biblatex}{#1}%
  \endgroup}
\protected\def\blx@warning@entry#1{%
  \ifdef\abx@field@entrykey
    {\blx@warning{#1\MessageBreak at entry '\abx@field@entrykey'}}
    {\blx@warning{#1}}}

\protected\def\blx@info#1{%
  \begingroup
  \blx@safe@actives
  \PackageInfo{biblatex}{#1\blx@noline}%
  \endgroup}
\def\blx@info@noline#1{%
  \begingroup
  \blx@safe@actives
  \PackageInfo{biblatex}{#1\@gobble}%
  \endgroup}

\let\blx@noline\@gobble
\AtEndOfPackage{\let\blx@noline\@empty}
\def\blx@imc@BibliographyWarning{\blx@warning@entry}
\blx@regimc\BibliographyWarning

\protected\def\abx@missing#1{%
  \mbox{\reset@font\bfseries#1}}

\def\blx@err@patch#1{%
  \blx@error
    {Patching #1 failed}
    {This is an internal issue typically caused by a
     conflict\MessageBreak between biblatex and some
     other package. Modifying\MessageBreak the package
     loading order may fix the problem}}

\def\blx@err@nolang#1{%
  \blx@error
    {Language '#1' not found}
    {The localization module for '#1' could not be found}}

\def\blx@err@invarg#1#2{%
  \blx@error
    {Argument '#1' invalid}
    {\ifblank{#2}
       {The argument you have supplied is invalid.\MessageBreak
	See the biblatex manual for details}
       {#2}}}

\def\blx@err@invopt#1#2{%
  \blx@error
    {Option '#1' invalid}
    {\ifblank{#2}
       {The option you have supplied is invalid.\MessageBreak
	See the biblatex manual for valid option keys and
	possible values}
       {#2}}}

\def\blx@err@confopt#1#2{%
  \blx@error
    {Conflicting options\ifblank{#1}{}{ (#1)}}
    {\ifblank{#2}
       {The option you have supplied conflicts with another one.\MessageBreak
	See the biblatex manual for valid option keys and possible values}
       {#2}}}

\def\blx@err@optdef#1{%
  \blx@error
    {Conflicting options}
    {The option '#1' is already defined}}

\def\blx@err@nodocdiv#1{%
  \blx@error
    {\@backslashchar#1 not provided by class}
    {The document class does not seems to support #1s}}

\def\blx@err@nosec#1{%
  \blx@error
    {Section '#1' not found}
    {The reference section '#1' could not be found}}

\def\blx@err@secfirst{%
  \blx@error
    {'section' not first filter}
    {When passing multiple filter options,
     the 'section' filter must be given first}}

\protected\def\blx@err@nestcite{%
  \blx@error
    {Nested citation command}
    {Citation commands may not be nested}}

\def\blx@err@nestenv#1{%
  \blx@error
    {Nested '#1' environment}
    {This environment may not be nested}}

\protected\def\blx@err@citecmd#1{%
  \begingroup
  \escapechar\m@ne
  \blx@error
    {Command '\@backslashchar\string#1' undefined}
    {The citation command '\@backslashchar\string#1'
     has not been defined\MessageBreak by the
     selected citation style}%
  \endgroup}

\def\blx@err@endnote#1{%
  \blx@error
    {Missing or incomplete endnote support}
    {There does not seem to be endnote support available\MessageBreak
     or the available support is incomplete.\MessageBreak
     If you continue, I will fall back to '\string#1'}%
  #1}

\def\blx@err@matchparen#1{%
  \blx@error
    {Unbalanced parentheses or brackets}
    {\iftoggle{blx@footnote}{#1 in foot or endnote}{#1}.\MessageBreak
     This error is triggered if \string\bibopenparen\space and
     \string\bibcloseparen\MessageBreak or
     \string\bibopenbracket\space and \string\bibclosebracket\space
     are unbalanced\MessageBreak or mismatched}}

\def\blx@err@nestparen#1{%
  \blx@error
    {Too deeply nested parentheses or brackets}
    {#1 nested too deeply%
     \iftoggle{blx@footnote}{\space in foot or endnote}{}.\MessageBreak
     This error may also be triggered if \string\mkbibparens\MessageBreak
     or \string\mkbibbrackets\space are nested too deeply}}

\def\blx@err@filter{%
  \blx@error
    {Invalid filter expression}
    {The filter expression you have supplied is invalid.\MessageBreak
     See the biblatex manual for details}}

\def\blx@warn@nohyph#1{%
  \blx@warning{No hyphenation patterns for '#1'}}

\protected\def\blx@warn@citecmd#1#2{%
  \blx@warning{%
    '\string#1' not defined by citation style.\MessageBreak
    Falling back to '\string#2'}%
  #2}

\protected\def\blx@warn@nostring#1{%
  \blx@warning@entry{Bibliography string '#1' undefined}%
  \abx@missing{#1}}

\def\blx@warn@conflopt#1{%
  \blx@warning{Conflicting options.\MessageBreak#1}}

\def\blx@warn@depropt#1{%
  \blx@warning{Deprecated option.\MessageBreak Ignoring '#1'}}

\def\blx@warn@bibempty{%
  \@latex@warning{Empty bibliography}}

\def\blx@warn@losempty{%
  \@latex@warning{Empty list of shorthands}}

\def\blx@inf@refsec{%
  \blx@info{Reference section=\the\c@refsection}}%

\def\blx@inf@refseg{%
  \ifnum\c@refsection=\z@
    \blx@info{Reference segment=\the\c@refsegment}%
  \else
    \blx@info{%
      Reference section/segment=%
      \the\c@refsection/\the\c@refsegment}%
  \fi}

\def\blx@inf@creset{%
  \blx@info{Resetting trackers}}%

\def\blx@msg@cundef#1{%
  Citation '#1' undefined}
\def\blx@msg@cundefon#1{%
  Citation '#1' on page \the\c@page\space undefined}

\newrobustcmd*{\RequireBiber}[1][2]{%
  \ifnumgreater{#1}\blx@reqbiber
    {\numgdef\blx@reqbiber{#1}}
    {}}
\@onlypreamble\RequireBiber
\let\blx@reqbiber\z@

\def\blx@checkbackend#1{%
  \ifnumequal\blx@backend\blx@backend@biber
    {}
    {\ifcase\blx@reqbiber
     \or
       \blx@info@noline{%
         backend=biber recommended by #1}%
     \or
       \blx@warning@noline{%
         backend=biber required by #1.\MessageBreak
	 Some features may not work properly}%
     \else
       \blx@error
         {backend=biber required by #1}
	 {The selected style or one of the .bib files
	  requires backend=biber.\MessageBreak It will
	  not work at all with any other backend}%
     \fi}}

% \blx@list@active			active aux files (basename)
%                                       [internal list]
% \blx@list@inactive			inactive aux files (basename)
%                                       [internal list]
% \blx@list@bibfiles@<auxfile>		aux file -> bib file mapping (refsections)
%                                       aux file (basename) -> bib files (full)
%                                       [internal list]

\let\blx@list@active\@empty
\let\blx@list@inactive\@empty
\listeadd\blx@list@inactive{\jobname}

\protected\def\blx@regbibfiles#1#2{%
  \forlistloop{\blx@regbibfile{#1}}{#2}}

\def\blx@regbibfile#1#2{%
  \ifcsundef{blx@res@loca@#2}
    {\blx@regbibfile@i{#1}{#2}}
    {\ifcsstring{blx@res@loca@#2}{local}
       {\blx@regbibfile@i{#1}{#2}}
       {}}}

\def\blx@regbibfile@i#1#2{%
  \ifinlistcs{#2}{blx@list@bibfiles@#1}
    {}
    {\listcsxadd{blx@list@bibfiles@#1}{#2}}}

\def\blx@check@logreq{%
  \begingroup
  \ifnum\blx@backend=\blx@backend@biber
    \ltxrequest{biblatex}{{\iftoggle{blx@runltx}{1}{0}}}{%
      \provides[type=dynamic]{
	\file{\jobname.bcf}
      }
      \requires[type=dynamic]{
        \file{\jobname.bbl}
      }
      \ifdef\blx@list@req@edit
        {\requires[type=editable]{
           \forlistloop\file\blx@list@req@edit
	 }}
	{}
      \ifdef\blx@list@req@stat
        {\requires[type=static]{
           \forlistloop\file\blx@list@req@stat
	 }}
	{}
    }%
    \logrequest[package=biblatex,priority=5,active={{\iftoggle{blx@runbtx}{1}{0}}}]{%
      \generic{biber}
      \cmdline{
	\binary{biber}
	\infile{\jobname}
      }
      \input{
	\file{\jobname.bcf}
      }
      \output{
	\file{\jobname.bbl}
      }
      \provides[type=dynamic]{
	\file{\jobname.bbl}
      }
      \requires[type=dynamic]{
	\file{\jobname.bcf}
      }
      \ifcsdef{blx@list@bibfiles@\jobname}
	{\requires[type=editable]{
	   \def\do{\file}
	   \dolistcsloop{blx@list@bibfiles@\jobname}
	 }}
	{}
    }%
  \else
    \ltxrequest{biblatex}{{\iftoggle{blx@runltx}{1}{0}}}{%
      \provides[type=dynamic]{
	\def\do##1{\file{##1.aux}}
	\dolistloop\blx@list@inactive
	\file{\blx@ctrlfile@bibtex\blxauxsuffix.bib}
      }
      \requires[type=dynamic]{
	\def\do##1{\file{##1.bbl}}
	\dolistloop\blx@list@inactive
      }
      \ifdef\blx@list@req@edit
        {\requires[type=editable]{
           \forlistloop\file\blx@list@req@edit
	 }}
	{}
      \ifdef\blx@list@req@stat
        {\requires[type=static]{
           \forlistloop\file\blx@list@req@stat
	 }}
	{}
    }%
    \def\do##1{%
      \ifinlist{##1}{\blx@list@active}
        {\blx@logreq@bibtex{1}{##1}}
	{\blx@logreq@bibtex{0}{##1}}}%
    \dolistloop\blx@list@inactive
  \fi
  \endgroup}

\def\blx@logreq@bibtex#1#2{%
  \logrequest[package=biblatex,priority=5,active=#1]{%
    \generic{bibtex}
    \cmdline{%
      \ifcase\blx@backend
        \binary{bibtex}
	\option{-min-crossrefs \blx@mincrossrefs}
      \or
        \binary{bibtex8}
        \option{--wolfgang}
        \option{--min\string_crossrefs \blx@mincrossrefs}
	\ifdef\blx@csfencoding
	  {\option{--csfile \blx@csfencoding.csf}}
	  {}%
      \or
        \binary{bibtexu}
        \option{--wolfgang}
        \option{--min\string_crossrefs \blx@mincrossrefs}
      \fi
      \infile{#2}
     }
     \input{
       \file{#2.aux}
     }
     \output{
       \file{#2.bbl}
     }
      \provides[type=dynamic]{
        \file{#2.bbl}
      }
      \requires[type=dynamic]{
        \file{#2.aux}
	\file{\blx@ctrlfile@bibtex\blxauxsuffix.bib}
      }
      \requires[type=editable]{
	\ifcsdef{blx@list@bibfiles@#2}
	  {\def\do{\file}
	   \dolistcsloop{blx@list@bibfiles@#2}}
	  {}
      }
      \requires[type=static]{
        \file{biblatex.bst}
	\ifnum\blx@backend=\blx@backend@bibtexe
	  \ifdef\blx@csfencoding
	    {\file{\blx@csfencoding.csf}}
	    {}%
	\fi
      }
  }%
}

\def\blx@logreq@active#1{%
  \ifnum\blx@backend=\blx@backend@biber
  \else
    \xifinlist{\blx@auxfile@bibtex}{\blx@list@active}
      {}
      {\listxadd\blx@list@active{\blx@auxfile@bibtex}}%
  \fi
  \ifblank{#1}
    {}
    {\@latex@warning{#1}}%
  \blx@rerun@latex
  \blx@rerun@bibtex}

\def\blx@logreq@inactive{%
  \ifnum\blx@backend=\blx@backend@biber
  \else
    \xifinlist{\blx@auxfile@bibtex}{\blx@list@inactive}
      {}
      {\listxadd\blx@list@inactive{\blx@auxfile@bibtex}}%
  \fi}

\def\blx@rerun@latex{%
  \G@refundefinedtrue
  \global\toggletrue{blx@runltx}%
  \global\let\blx@rerun@latex\relax}

\def\blx@rerun@bibtex{%
  \global\toggletrue{blx@runbtx}%
  \global\let\blx@rerun@bibtex\relax}

\let\blx@checksum@old\@empty
\let\blx@checksum@new\@empty
\let\blx@pagesum@old\@empty
\let\blx@pagesum@new\@empty

\def\blx@checksum#1#2#3{%
  \begingroup
  \blx@tempcnta\the\numexpr0#2*0#3\relax
  \blx@tempcntb\blx@tempcnta
  \divide\blx@tempcntb10
  \multiply\blx@tempcntb10
  \advance\blx@tempcnta-\blx@tempcntb
  \xdef#1{#1\the\blx@tempcnta}%
  \endgroup}

\def\blx@addchecksum{\blx@checksum\blx@checksum@old}
\def\blx@addpagesum{\blx@checksum\blx@pagesum@old}
\AtEndDocument{%
  \def\blx@addchecksum{\blx@checksum\blx@checksum@new}%
  \def\blx@addpagesum{\blx@checksum\blx@pagesum@new}}

\protected\def\blx@check@rerun{%
  \begingroup
  \blx@tempcnta\z@
  \iftoggle{blx@runltx}
    {\blx@tempcnta\@ne}
    {\ifx\blx@checksum@old\blx@checksum@new
       \ifx\blx@pagesum@old\blx@pagesum@new
       \else
	 \blx@tempcnta\@ne
       \fi
     \else
       \blx@tempcnta\@ne
     \fi}%
  \iftoggle{blx@runbtx}
    {\advance\blx@tempcnta\tw@}
    {}%
  \ifcase\blx@tempcnta
  \or
    \blx@rerun@latex
    \blx@warning@noline{%
      Please rerun LaTeX%
      \ifx\blx@pagesum@old\blx@pagesum@new\else
        .\MessageBreak Page breaks have changed%
      \fi}%
  \else
    \blx@rerun@latex
    \blx@warn@auxlist
  \fi
  \endgroup}

\def\blx@warn@auxlist{%
  \begingroup
  \ifnum\blx@backend=\blx@backend@biber
    \edef\blx@tempa{%
      Please (re)run Biber on the file:\MessageBreak
      \jobname}%
  \else
    \edef\blx@tempa{Please (re)run BibTeX on the file(s):}%
    \def\do##1{\appto\blx@tempa{\MessageBreak##1}}%
    \dolistloop\blx@list@active
  \fi
  \blx@warning@noline{%
    \blx@tempa\MessageBreak
    and rerun LaTeX afterwards}%
  \endgroup}

\AfterEndDocument{%
  \blx@check@rerun
  \blx@check@logreq}

%% Punctuation and capitalization

% 1001       apostrophe (\printnames only)
% 1002       abbreviation period (dot)
% 1003/1250  comma
% 1004/1500  semicolon
% 1005/2000  colon
% 1006/3000  period
% 1007/3001  exclamation mark
% 1008/3002  question mark
% 1009       suppress punctuation
% 1010       new paragaph

\mathchardef\blx@sf@apo=1001
\mathchardef\blx@sf@dot=1002
\mathchardef\blx@sf@comma=1003
\mathchardef\blx@sf@semicolon=1004
\mathchardef\blx@sf@colon=1005
\mathchardef\blx@sf@period=1006
\mathchardef\blx@sf@exclam=1007
\mathchardef\blx@sf@question=1008
\mathchardef\blx@sf@nopunct=1009
\mathchardef\blx@sf@par=1010
\mathchardef\blx@sf@threshold@low=1002
\mathchardef\blx@sf@threshold@high=1009

\csdef{blx@sf@1250}{\the\blx@sf@comma}
\csdef{blx@sf@1500}{\the\blx@sf@semicolon}
\csdef{blx@sf@2000}{\the\blx@sf@colon}
\csdef{blx@sf@3000}{\the\blx@sf@period}
\csdef{blx@sf@3001}{\the\blx@sf@exclam}
\csdef{blx@sf@3002}{\the\blx@sf@question}

\csdef{blx@pm@,}{comma}
\csdef{blx@pm@;}{semicolon}
\csdef{blx@pm@:}{colon}
\csdef{blx@pm@.}{period}
\csdef{blx@pm@!}{exclam}
\csdef{blx@pm@?}{question}

\def\blx@setsfcodes{%
  \let\blx@setsfcodes\relax
  \let\frenchspacing\blx@setfrcodes
  \let\nonfrenchspacing\blx@setencodes
  \ifnum\sfcode`\.>2000
    \blx@setencodes
  \else
    \blx@setfrcodes
  \fi
  \@setquotesfcodes
  \sfcode`\(=\z@
  \sfcode`\)=\z@
  \sfcode`\[=\z@
  \sfcode`\]=\z@
  \sfcode`\<=\z@
  \sfcode`\>=\z@}

\def\blx@setfrcodes{%
  \ifnum\sfcode`\A=\@m
  \else
    \blx@setazcodes
  \fi
  \sfcode`\,=\blx@sf@comma
  \sfcode`\;=\blx@sf@semicolon
  \sfcode`\:=\blx@sf@colon
  \sfcode`\.=\blx@sf@period
  \sfcode`\!=\blx@sf@exclam
  \sfcode`\?=\blx@sf@question
}

\def\blx@setencodes{%
  \sfcode`\,=1250
  \sfcode`\;=1500
  \sfcode`\:=2000
  \sfcode`\.=3000
  \sfcode`\!=3001
  \sfcode`\?=3002
}

\def\blx@namecodes{%
  \ifnum\sfcode`\A=\@m
  \else
    \blx@setazcodes
  \fi
  \sfcode`\'=\blx@sf@apo
}

\begingroup
\let\blx@setazcodes\@empty
\def\blx@tempa{%
  \xdef\blx@setazcodes{%
    \blx@setazcodes
    \sfcode\the\blx@tempcnta=\@m}
  \ifnum\blx@tempcnta<\blx@tempcntb
    \advance\blx@tempcnta\@ne
    \expandafter\blx@tempa
  \fi}
\blx@tempcnta`\A
\blx@tempcntb`\Z
\blx@tempa
\ifnum\inputlineno=\m@ne\else
  \blx@tempcnta"80
  \blx@tempcntb"9C
  \blx@tempa
  \blx@tempcnta"C0
  \blx@tempcntb"DF
  \blx@tempa
\fi
\endgroup

\def\blx@spacefactor{%
  \ifhmode
    \ifcsundef{blx@sf@\the\spacefactor}
      {\the\spacefactor}
      {\csname blx@sf@\the\spacefactor\endcsname}%
  \else
    \the\blx@sf@par
  \fi}

\protected\def\blx@leavevmode{%
  \ifhmode
  \else
    \leavevmode\spacefactor\blx@sf@par
  \fi}

\protected\def\blx@leavevmode@cite{%
  \ifhmode
    \ifnum\spacefactor=\blx@sf@par
    \else
      \spacefactor\@m
    \fi
  \else
    \leavevmode
  \fi}

\protected\def\blx@imc@setpunctfont#1{%
  \blx@ifpuncthook
    {\gdef\abx@puncthook{%
       \ifdim\lastkern>\z@\unkern\fi
       \blx@imc@resetpunctfont#1}}
    {}}
\protected\def\blx@imc@resetpunctfont{%
  \blx@ifpuncthook
    {\global\let\abx@puncthook\@firstofone}
    {}}

\protected\def\blx@setpostpunct#1{%
  \blx@ifuspunct
    {\global\let\blx@postpunct\blx@dopostpunct
     \ifdef\blx@thepostpunct
       {\gappto\blx@thepostpunct{#1}}
       {\gdef\blx@thepostpunct{#1}}}
    {}}

\def\blx@dopostpunct{%
  \blx@thepostpunct
  \global\let\blx@postpunct\@empty
  \global\undef\blx@thepostpunct}

\protected\def\blx@postpunct@agroup{%
  \aftergroup\blx@postpunct
  \let\blx@postpunct@agroup\@empty}

% {<characters>}

\newrobustcmd*{\DeclareCapitalPunctuation}[1]{%
  \cslet{blx@cap@\the\blx@sf@par}\@empty
  \csundef{blx@cap@\the\blx@sf@comma}%
  \csundef{blx@cap@\the\blx@sf@semicolon}%
  \csundef{blx@cap@\the\blx@sf@colon}%
  \csundef{blx@cap@\the\blx@sf@period}%
  \csundef{blx@cap@\the\blx@sf@exclam}%
  \csundef{blx@cap@\the\blx@sf@question}%
  \ifblank{#1}
    {}
    {\expandafter\blx@defcapstring\detokenize{#1}\relax}}

\def\blx@defcapstring#1{%
  \ifx#1\relax
  \else
    \begingroup
    \blx@setfrcodes
    \ifcsdef{blx@pm@#1}
      {\expandafter\endgroup
       \expandafter\let
         \csname blx@cap@\the\sfcode`#1\endcsname\@empty}
      {\blx@warning{Ignoring invalid punctuation mark '#1'}%
       \endgroup}%
    \expandafter\blx@defcapstring
  \fi}

% {<characters>}

\newrobustcmd*{\DeclareQuotePunctuation}[1]{%
  \csdef{blx@qp@comma}{\blx@postpunct}%
  \csdef{blx@qp@semicolon}{\blx@postpunct}%
  \csdef{blx@qp@colon}{\blx@postpunct}%
  \csdef{blx@qp@period}{\blx@postpunct}%
  \csdef{blx@qp@exclam}{\blx@postpunct}%
  \csdef{blx@qp@question}{\blx@postpunct}%
  \cslet{blx@pq@comma}\@empty
  \cslet{blx@pq@semicolon}\@empty
  \cslet{blx@pq@colon}\@empty
  \cslet{blx@pq@period}\@empty
  \cslet{blx@pq@exclam}\@empty
  \cslet{blx@pq@question}\@empty
  \let\blx@quotepunct\@empty
  \ifblank{#1}
    {\let\blx@ifuspunct\@secondoftwo}
    {\let\blx@ifuspunct\@firstoftwo
     \expandafter\blx@defquotepunct\detokenize{#1}&}}

\def\blx@defquotepunct#1{%
  \ifx\relax
  \else
    \ifcsdef{blx@pm@#1}
      {\appto\blx@quotepunct{#1}%
       \cslet{blx@qp@\csuse{blx@pm@#1}}\@empty
       \csdef{blx@pq@\csuse{blx@pm@#1}}{\blx@postpunct}}
      {\blx@warning{Ignoring invalid punctuation mark '#1'}}%
    \expandafter\blx@defquotepunct
  \fi}

% {<mark>}{<characters>}

\newrobustcmd*{\DeclarePunctuationPairs}[2]{%
  \ifcsdef{blx@sf@\detokenize{#1}}
    {\ifnum\csname blx@sf@\detokenize{#1}\endcsname>\blx@sf@apo
       \ifnum\csname blx@sf@\detokenize{#1}\endcsname<\blx@sf@nopunct
         \expandafter\blx@defpunctpairs
         \expandafter{\the\csname blx@sf@\detokenize{#1}\endcsname}{#2}%
       \else
         \blx@err@invarg{\detokenize{#1}{}}%
       \fi
     \else
       \blx@err@invarg{\detokenize{#1}{}}%
     \fi}
    {\blx@err@invarg{\detokenize{#1}{}}}}

\def\blx@defpunctpairs#1#2{%
  \blx@undefpair{#1}{\the\blx@sf@dot}%
  \blx@undefpair{#1}{\the\blx@sf@comma}%
  \blx@undefpair{#1}{\the\blx@sf@semicolon}%
  \blx@undefpair{#1}{\the\blx@sf@colon}%
  \blx@undefpair{#1}{\the\blx@sf@period}%
  \blx@undefpair{#1}{\the\blx@sf@exclam}%
  \blx@undefpair{#1}{\the\blx@sf@question}%
  \ifblank{#2}
    {}
    {\begingroup
     \def\blx@tempa{#1}%
     \let\blx@tempb\@empty
     \blx@setfrcodes
     \sfcode`\*=\blx@sf@dot
     \expandafter\blx@defpair\detokenize{#2}&%
     \expandafter\endgroup\blx@tempb}}

\def\blx@defpair#1{%
  \ifx%
  \else
    \ifnum\the\sfcode`#1>\blx@sf@apo
      \ifnum\the\sfcode`#1<\blx@sf@nopunct
        \eappto\blx@tempb{%
          \cslet{blx@pp@\blx@tempa @\the\sfcode`#1}\noexpand\@empty}%
      \else
        \blx@err@invarg{#1}{}%
      \fi
    \else
      \blx@err@invarg{#1}{}%
    \fi
    \expandafter\blx@defpair
  \fi}

\def\blx@undefpair#1#2{%
  \ifcsdef{blx@pp@#1@#2}
    {\csundef{blx@pp@#1@#2}}
    {}}

\protected\def\blx@resetpunct{%
  \DeclareCapitalPunctuation{.!?}%
  \DeclarePunctuationPairs{dot}{}%
  \DeclarePunctuationPairs{comma}{*!?}%
  \DeclarePunctuationPairs{semicolon}{*!?}%
  \DeclarePunctuationPairs{colon}{*!?}%
  \DeclarePunctuationPairs{period}{}%
  \DeclarePunctuationPairs{exclam}{*}%
  \DeclarePunctuationPairs{question}{*}%
  \DeclareQuotePunctuation{}%
  \def\abx@dot{\ifdim\lastkern>\z@\unkern\fi.\spacefactor\blx@sf@dot}%
  \def\abx@comma{\ifdim\lastkern>\z@\unkern\fi\abx@puncthook{,}}%
  \def\abx@semicolon{\abx@puncthook{;}}%
  \def\abx@colon{\abx@puncthook{:}}%
  \def\abx@period{\ifdim\lastkern>\z@\unkern\fi\abx@puncthook{.}}%
  \def\abx@exclam{\abx@puncthook{!}}%
  \def\abx@question{\abx@puncthook{?}}%
  \global\let\abx@puncthook\@firstofone
  \global\let\blx@postpunct\@empty}

\blx@resetpunct

% {<character>}{<true>}{<false>}

\protected\def\blx@imc@ifpunctmark#1{%
  \ifhmode
    \begingroup
    \sfcode`\*=\blx@sf@dot
    \ifnum\sfcode`#1=\spacefactor
      \endgroup
      \expandafter\expandafter
      \expandafter\@firstoftwo
    \else
      \endgroup
      \expandafter\expandafter
      \expandafter\@secondoftwo
    \fi
  \else
    \expandafter\@secondoftwo
  \fi}

% {<true>}{<false>}

\protected\def\blx@imc@ifterm{%
  \ifhmode
    \expandafter\blx@imc@ifcapital
  \else
    \expandafter\@secondoftwo
  \fi}

% {<true>}{<false>}

\protected\def\blx@imc@ifcapital{%
  \ifcsdef{blx@cap@\blx@spacefactor}}

% {<true>}{<false>}

\protected\def\blx@imc@ifpunct{%
  \ifnum\blx@spacefactor>\blx@sf@threshold@low
    \ifnum\blx@spacefactor<\blx@sf@threshold@high
      \expandafter\expandafter
      \expandafter\@firstoftwo
    \else
      \expandafter\expandafter
      \expandafter\@secondoftwo
    \fi
  \else
    \expandafter\@secondoftwo
  \fi}

% {<character>}

\newrobustcmd*{\autocap}[1]{#1}

\protected\def\blx@imc@autocap{%
  \blx@imc@ifcapital\MakeUppercase\@firstofone}

\protected\def\blx@imc@nopunct{%
  \leavevmode\spacefactor\blx@sf@nopunct}

\protected\def\blx@imc@isdot{%
  \ifnum\blx@spacefactor=\blx@sf@period
    \spacefactor\blx@sf@dot
  \fi}

\protected\def\blx@imc@adddot{%
  \blx@addpunct{dot}%
  \ifnum\blx@spacefactor=\blx@sf@period
    \spacefactor\blx@sf@dot
  \fi}

\protected\def\blx@imc@addperiod{%
  \blx@addpunct{period}%
  \ifnum\blx@spacefactor=\blx@sf@dot
    \spacefactor\blx@sf@period
  \fi}

\protected\def\blx@imc@addcomma{\blx@addpunct{comma}}
\protected\def\blx@imc@addsemicolon{\blx@addpunct{semicolon}}
\protected\def\blx@imc@addcolon{\blx@addpunct{colon}}
\protected\def\blx@imc@addexclam{\blx@addpunct{exclam}}
\protected\def\blx@imc@addquestion{\blx@addpunct{question}}

\def\blx@addpunct#1{%
  \unspace
  \ifnum\blx@spacefactor<\blx@sf@threshold@low
    \csuse{blx@qp@#1}\csuse{abx@#1}%
  \else
    \ifnum\blx@spacefactor>\blx@sf@threshold@high
      \csuse{blx@qp@#1}\csuse{abx@#1}%
    \else
      \ifcsdef{blx@pp@\the\csname blx@sf@#1\endcsname @\blx@spacefactor}
        {\csuse{blx@qp@#1}\csuse{abx@#1}}
        {\csuse{blx@qp@#1}}%
    \fi
  \fi
  \csuse{blx@pq@#1}}

\providerobustcmd*{\unspace}{%
  \ifbool{hmode}
    {\ifdimgreater\lastskip\z@
       {\unskip\unspace}
       {\ifnumgreater\lastpenalty\z@
	  {\unpenalty\unspace}
	  {}}}
    {}}

\newrobustcmd*{\bibsentence}{%
  \leavevmode\spacefactor\blx@sf@par
  \ignorespaces}

\newrobustcmd*{\midsentence}{%
  \leavevmode
  \@ifstar
    {\ifnum\spacefactor=\blx@sf@dot
     \else
       \spacefactor\@m
     \fi}
    {\spacefactor\@m}}

\newrobustcmd*{\addslash}{%
  \unspace/\penalty\hyphenpenalty\hskip\z@skip}

\newrobustcmd*{\addspace}{%
  \unspace\blx@postpunct
  \space\blx@imc@resetpunctfont}

\newrobustcmd*{\addnbspace}{%
  \unspace\blx@postpunct
  \nobreak\space\blx@imc@resetpunctfont}

\newrobustcmd*{\addthinspace}{%
  \unspace\blx@postpunct
  \hskip0.16667em\relax
  \blx@imc@resetpunctfont}

\newrobustcmd*{\addnbthinspace}{%
  \unspace\blx@postpunct
  \nobreak\hskip0.16667em\relax
  \blx@imc@resetpunctfont}

\newrobustcmd*{\addlowpenspace}{%
  \unspace\blx@postpunct
  \penalty\value{lownamepenalty}\space
  \blx@imc@resetpunctfont}

\newrobustcmd*{\addhighpenspace}{%
  \unspace\blx@postpunct
  \penalty\value{highnamepenalty}\space
  \blx@imc@resetpunctfont}

\newrobustcmd*{\addlpthinspace}{%
  \unspace\blx@postpunct
  \penalty\value{lownamepenalty}%
  \hskip0.16667em\relax\blx@imc@resetpunctfont}

\newrobustcmd*{\addhpthinspace}{%
  \unspace\blx@postpunct
  \penalty\value{highnamepenalty}%
  \hskip0.16667em\relax\blx@imc@resetpunctfont}

\newrobustcmd*{\addabbrvspace}{%
  \unspace\blx@postpunct
  \penalty\value{abbrvpenalty}%
  \space\blx@imc@resetpunctfont}

\newrobustcmd*{\addabthinspace}{%
  \unspace\blx@postpunct
  \penalty\value{abbrvpenalty}%
  \hskip0.16667em\relax
  \blx@imc@resetpunctfont}

\newrobustcmd*{\adddotspace}{%
  \unspace\adddot\blx@postpunct
  \penalty\value{abbrvpenalty}%
  \space\blx@imc@resetpunctfont}

\providerobustcmd*{\noligature}{%
  \penalty\@M\discretionary{-}{}{\kern0.03em}%
  \nobreak\hskip\z@skip}

\providerobustcmd*{\hyphen}{%
  \nobreak-\nobreak\hskip\z@skip}

\providerobustcmd*{\nbhyphen}{%
  \nobreak\mbox{-}\nobreak\hskip\z@skip}

\providerobustcmd*{\hyphenate}{%
  \nobreak\-\nobreak\hskip\z@skip}

\providerobustcmd*{\allowhyphens}{%
  \nobreak\hskip\z@skip}

\providerobustcmd*{\nohyphenation}{%
  \lefthyphenmin\@m}

\providerobustcmd*{\textnohyphenation}[1]{%
  \bgroup\nohyphenation#1\egroup}

\blx@regimcs{%
  \setpunctfont \resetpunctfont \ifcapital \autocap \ifpunctmark
  \ifpunct \ifterm \nopunct \isdot \adddot \addperiod \addcomma
  \addsemicolon \addcolon \addexclam \addquestion}

\appto\blx@blxinit{%
  \appto\nocorrlist{\isdot\adddot\addperiod\addcomma}}

%% Style definition

% {<bibstyle>}

\newrobustcmd*{\RequireBibliographyStyle}[1]{%
  \blx@inputonce{#1.bbx}{bibliography style '#1'}{}{}{}
    {\blx@error
       {Style '#1' not found}
       {The bibliography style '#1' could not be found}}}
\@onlypreamble\RequireBibliographyStyle

% {<code>}

\newrobustcmd*{\InitializeBibliographyStyle}{\appto\blx@hook@bbxinit}
\@onlypreamble\InitializeBibliographyStyle

% {<entry type>}{<driverdef>}

\newrobustcmd*{\DeclareBibliographyDriver}[1]{%
  \long\csdef{blx@bbx@#1}}
\@onlypreamble\DeclareBibliographyDriver

% {<entry type>}

\def\blx@driver#1{%
  \ifcsdef{blx@bbx@#1}
    {\csuse{blx@bbx@#1}}
    {\ifcsdef{blx@bbx@*}
       {\blx@warning{%
          No driver for entry type '#1'.\MessageBreak
	  Using fallback driver}%
        \csuse{blx@bbx@*}}
       {\blx@error
          {No driver found}
	  {I can't find a driver for the entry type
	   '\abx@field@entrytype'\MessageBreak
	   and there is no fallback driver either}}}}

% {<type>}{<true>}{<false>}

\def\blx@imc@ifdriver#1{\ifcsdef{blx@bbx@#1}}

% {<alias>}{<type>}

\newrobustcmd*{\DeclareBibliographyAlias}[2]{%
  \csedef{blx@bbx@#1}{%
    \expandafter\noexpand\csname blx@bbx@#2\endcsname}}
\@onlypreamble\DeclareBibliographyAlias

% {<key>}[<value>]{<code>}

\newrobustcmd*{\DeclareBibliographyOption}[1]{%
  \@ifnextchar[%]
    {\blx@defbibopt{#1}}
    {\blx@defbibopt{#1}[]}}

\long\def\blx@defbibopt#1[#2]#3{%
  \ifcsundef{KV@blx@opt@ldt@#1}
    {\ifcsundef{KV@blx@opt@pre@#1}
       {\ifblank{#2}
          {\define@key{blx@opt@pre}{#1}{#3}}
          {\define@key{blx@opt@pre}{#1}[#2]{#3}}}
       {\blx@err@optdef{#1}}}
    {\blx@err@optdef{#1}}}

% {<key>}[<value>]{<code>}

\newrobustcmd*{\DeclareTypeOption}[1]{%
  \@ifnextchar[%]
    {\blx@deftypeopt{#1}}
    {\blx@deftypeopt{#1}[]}}

\long\def\blx@deftypeopt#1[#2]#3{%
  \ifcsundef{KV@blx@opt@typ@#1}
    {\ifblank{#2}
       {\define@key{blx@opt@typ}{#1}{#3}}
       {\define@key{blx@opt@typ}{#1}[#2]{#3}}}
    {\blx@err@optdef{#1}}}

% {<key>}[<value>]{<code>}

\newrobustcmd*{\DeclareEntryOption}[1]{%
  \@ifnextchar[%]
    {\blx@defentryopt{#1}}
    {\blx@defentryopt{#1}[]}}

\long\def\blx@defentryopt#1[#2]#3{%
  \ifcsundef{KV@blx@opt@ent@#1}
    {\ifblank{#2}
       {\define@key{blx@opt@ent}{#1}{#3}}
       {\define@key{blx@opt@ent}{#1}[#2]{#3}}}
    {\blx@err@optdef{#1}}}

%% Auxiliary commands

\newrobustcmd*{\citereset}{%
  \csuse{blx@hook@cbxinit}%
  \@ifstar
    {}
    {\global\cslet{blx@bsee@\the\c@refsection}\@empty
     \global\cslet{blx@fsee@\the\c@refsection}\@empty
     \blx@ibidreset@force
     \blx@idemreset@force
     \blx@opcitreset@force
     \blx@loccitreset@force}}

\def\blx@save#1{%
  \ifcsdef{blx@saved@#1}
    {}
    {\blx@safe@actives
     \csletcs{blx@saved@#1}{#1}%
     \blx@rest@actives}}

\def\blx@restore#1{%
  \ifcsdef{blx@saved@#1}
    {\blx@safe@actives
     \csletcs{#1}{blx@saved@#1}%
     \csundef{blx@saved@#1}%
     \blx@rest@actives}
    {}}

\newrobustcmd*{\savecommand}[1]{%
  \ifcsdef{blx@saved@cmd@\detokenize{#1}}
    {}
    {\cslet{blx@saved@cmd@\detokenize{#1}}{#1}}}

\newrobustcmd*{\restorecommand}[1]{%
  \ifcsdef{blx@saved@cmd@\detokenize{#1}}
    {\letcs{#1}{blx@saved@cmd@\detokenize{#1}}%
     \csundef{blx@saved@cmd@\detokenize{#1}}}
    {}}

% {<name>}

\newrobustcmd*{\savebibmacro}[1]{%
  \blx@save{abx@macro@\detokenize{#1}}}

\newrobustcmd*{\restorebibmacro}[1]{%
  \blx@restore{abx@macro@\detokenize{#1}}}

% {<name>}[<args>][<optarg>]{<definition>}

\newrobustcmd*{\newbibmacro}{%
  \@star@or@long\blx@newbibmacro}

\def\blx@newbibmacro#1{%
  \ifcsundef{abx@macro@\detokenize{#1}}
    {\blx@defbibmacro\new@command{#1}}
    {\blx@warning{%
       Macro '\detokenize{#1}' already defined.\MessageBreak
       Using \string\renewbibmacro}
     \blx@defbibmacro\renew@command{#1}}}

\newrobustcmd*{\renewbibmacro}{%
  \@star@or@long\blx@renewbibmacro}

\def\blx@renewbibmacro#1{%
  \ifcsundef{abx@macro@\detokenize{#1}}
    {\blx@warning{%
       Macro '\detokenize{#1}' undefined.\MessageBreak
       Using \string\newbibmacro}
     \blx@defbibmacro\new@command{#1}}
    {\blx@defbibmacro\renew@command{#1}}}

\newrobustcmd*{\providebibmacro}{%
  \@star@or@long{\blx@defbibmacro\provide@command}}

\def\blx@defbibmacro#1#2{%
  \expandafter#1\csname abx@macro@\detokenize{#2}\endcsname}

% {<name>}

\newrobustcmd*{\usebibmacro}[1]{%
  \ifcsundef{abx@macro@\detokenize{#1}}
    {\blx@error
       {Bibliography macro '\detokenize{#1}' undefined}
       {Use '\string\newbibmacro' to define this macro}}
    {\csuse{abx@macro@\detokenize{#1}}}}

% {<field>}

\def\blx@imc@thefield#1{\csuse{abx@field@#1}}

\def\blx@imc@strfield#1{%
  \ifcsdef{abx@field@#1}
    {\detokenize\expandafter\expandafter\expandafter
       {\csname abx@field@#1\endcsname}}
    {}}

% {<plainlist>}

\def\blx@imc@thelist#1{\csuse{abx@list@#1}}

% {<namelist>}

\def\blx@imc@thename#1{\csuse{abx@name@#1}}

% {<field>}

\protected\def\blx@imc@clearfield#1{%
  \csundef{abx@field@#1}}

% {<plainlist>}

\protected\def\blx@imc@clearlist#1{%
  \ifcsundef{abx@list@#1}
    {}
    {\togglefalse{abx@bool@more#1}%
     \csundef{abx@list@#1}%
     \csname c@#1\endcsname\z@}}

% {<namelist>}

\protected\def\blx@imc@clearname#1{%
  \ifcsundef{abx@name@#1}
    {}
    {\togglefalse{abx@bool@more#1}%
     \csundef{abx@name@#1}%
     \csname c@#1\endcsname\z@}}

% {<field>}{<macro>}

\protected\def\blx@imc@restorefield#1{\cslet{abx@field@#1}}

% {<plainlist>}{<macro>}

\protected\def\blx@imc@restorelist#1{\cslet{abx@list@#1}}

% {<namelist>}{<macro>}

\protected\def\blx@imc@restorename#1{\cslet{abx@name@#1}}

% {<field>}{<macro>}

\protected\def\blx@imc@savefield{%
  \@ifstar{\blx@savedata{field}}{\global\blx@savedata{field}}}
\def\blx@savedata#1#2#3{\letcs#3{abx@#1@#2}}

% {<plainlist>}{<macro>}

\protected\def\blx@imc@savelist{%
  \@ifstar{\blx@savedata{list}}{\global\blx@savedata{list}}}

% {<namelist>}{<macro>}

\protected\def\blx@imc@savename{%
  \@ifstar{\blx@savedata{name}}{\global\blx@savedata{name}}}

% {<field>}{<csname>}

\protected\def\blx@imc@savefieldcs{%
  \@ifstar{\blx@savedatacs{field}}{\global\blx@savedatacs{field}}}
\def\blx@savedatacs#1#2#3{\csletcs{#3}{abx@#1@#2}}

% {<plainlist>}{<csname>}

\protected\def\blx@imc@savelistcs{%
  \@ifstar{\blx@savedatacs{list}}{\global\blx@savedatacs{list}}}

% {<namelist>}{<csname>}

\protected\def\blx@imc@savenamecs{%
  \@ifstar{\blx@savedatacs{name}}{\global\blx@savedatacs{name}}}

% {<field>}{<true>}{<false>}

\def\blx@imc@iffieldundef#1{%
  \ifcsundef{abx@field@#1}}

% {<plainlist>}{<true>}{<false>}

\def\blx@imc@iflistundef#1{%
  \ifcsundef{abx@list@#1}}

% {<namelist>}{<true>}{<false>}

\def\blx@imc@ifnameundef#1{%
  \ifcsundef{abx@name@#1}}

% {<field1>}{<field2>}{<true>}{<false>}

\def\blx@imc@iffieldsequal#1#2{%
  \ifcsequal{abx@field@#1}{abx@field@#2}}

% {<plainlist1>}{<plainlist2>}{<true>}{<false>}

\def\blx@imc@iflistsequal#1#2{%
  \ifcsequal{abx@list@#1}{abx@list@#2}}

% {<namelist1>}{<namelist2>}{<true>}{<false>}

\def\blx@imc@ifnamesequal#1#2{%
  \ifcsundef{abx@name@#1}
    {\@secondoftwo}
    {\ifcsundef{abx@name@#2}
       {\@secondoftwo}
       {\blx@ifnamesequal{#1}{#2}}}}

\def\blx@ifnamesequal#1#2{%
  \begingroup
  \let\blx@tempa\@empty
  \expandafter\expandafter
  \expandafter\blx@ifnamesequal@i\csname abx@name@#2\endcsname
  \let\blx@tempb\blx@tempa
  \let\blx@tempa\@empty
  \expandafter\expandafter
  \expandafter\blx@ifnamesequal@i\csname abx@name@#1\endcsname
  \expandafter\endgroup
  \ifx\blx@tempa\blx@tempb
    \expandafter\@firstoftwo
  \else
    \expandafter\@secondoftwo
  \fi}

\def\blx@ifnamesequal@i#1#2{%
  \expandafter\blx@ifnamesequal@ii#2{}&}

\def\blx@ifnamesequal@ii#1{%
  \ifblank{#1}
    {\blx@namebreak}
    {\blx@ifnamesequal@iii#1%
     \blx@ifnamesequal@ii}}

\def\blx@ifnamesequal@iii#1#2#3#4#5#6#7#8#9{%
  \setkeys{blx@opt@name}{#1}%
  \ifdef\abx@field@hash
    {\eappto\blx@tempa{{\abx@field@hash}}}
    {\appto\blx@tempa{{{#2}{#4}{#6}{#8}}}}}

% {<field>}{<macro>}{<true>}{<false>}

\def\blx@imc@iffieldequals#1#2{%
  \blx@imc@iffieldundef{#1}
    {\@secondoftwo}
    {\ifundef#2%
       {\@secondoftwo}
       {\expandafter\ifx\csname abx@field@#1\endcsname#2%
          \expandafter\@firstoftwo
        \else
          \expandafter\@secondoftwo
        \fi}}}

% {<plainlist>}{<macro>}{<true>}{<false>}

\def\blx@imc@iflistequals#1#2{%
  \blx@imc@iflistundef{#1}
    {\@secondoftwo}
    {\ifundef#2%
       {\@secondoftwo}
       {\expandafter\ifx\csname abx@list@#1\endcsname#2%
          \expandafter\@firstoftwo
        \else
          \expandafter\@secondoftwo
        \fi}}}

% {<namelist>}{<macro>}{<true>}{<false>}

\def\blx@imc@ifnameequals#1#2{% FIXME
  \blx@imc@ifnameundef{#1}
    {\@secondoftwo}
    {\ifundef#2%
       {\@secondoftwo}
       {\expandafter\ifx\csname abx@name@#1\endcsname#2%
          \expandafter\@firstoftwo
        \else
          \expandafter\@secondoftwo
        \fi}}}

% {<field>}{<csname>}{<true>}{<false>}

\def\blx@imc@iffieldequalcs#1{%
  \ifcsequal{abx@field@#1}}

% {<plainlist>}{<csname>}{<true>}{<false>}

\def\blx@imc@iflistequalcs#1{%
  \ifcsequal{abx@list@#1}}

% {<namelist>}{<csname>}{<true>}{<false>}

\def\blx@imc@ifnameequalcs#1{% FIXME
  \ifcsequal{abx@name@#1}}

% {<field>}{<string>}{<true>}{<false>}

\protected\long\def\blx@imc@iffieldequalstr#1#2{%
  \blx@imc@iffieldundef{#1}
    {\@secondoftwo}
    {\expandafter\expandafter\expandafter\ifstrequal
     \expandafter\expandafter\expandafter{%
       \csname abx@field@#1\endcsname}{#2}}}

% {<field>}{<true>}{<false>}

\protected\def\blx@imc@iffieldxref#1{%
  \blx@imc@iffieldundef{#1}
    {\@secondoftwo}
    {\blx@whichxref
       {\blx@iffieldxref{#1}}
       {\@secondoftwo}}}

\def\blx@iffieldxref#1#2{%
  \begingroup
  \letcs\blx@tempa{abx@field@#2}%
  \letcs\blx@tempb{abx@field@#1}%
  \csundef{abx@field@#1}%
  \blx@getdata{\blx@tempa}%
  \blx@imc@iffieldequals{#1}\blx@tempb
    {\aftergroup\@firstoftwo}
    {\aftergroup\@secondoftwo}%
  \endgroup}

\def\blx@whichxref#1#2{%
  \blx@imc@iffieldundef{crossref}
    {\blx@imc@iffieldundef{xref}
       {#2}
       {#1{xref}}}
    {#1{crossref}}}

% {<plainlist>}{<true>}{<false>}

\protected\def\blx@imc@iflistxref#1{%
  \blx@imc@iflistundef{#1}
    {\@secondoftwo}
    {\blx@whichxref
       {\blx@iflistxref{#1}}
       {\@secondoftwo}}}

\def\blx@iflistxref#1#2{%
  \begingroup
  \letcs\blx@tempa{abx@field@#2}%
  \letcs\blx@tempb{abx@list@#1}%
  \csundef{abx@list@#1}%
  \blx@getdata{\blx@tempa}%
  \blx@imc@iflistequals{#1}\blx@tempb
    {\aftergroup\@firstoftwo}
    {\aftergroup\@secondoftwo}%
  \endgroup}

% {<namelist>}{<true>}{<false>}

\protected\def\blx@imc@ifnamexref#1{%
  \blx@imc@ifnameundef{#1}
    {\@secondoftwo}
    {\blx@whichxref
       {\blx@ifnamexref{#1}}
       {\@secondoftwo}}}

\def\blx@ifnamexref#1#2{%
  \begingroup
  \letcs\blx@tempa{abx@field@#2}%
  \letcs\blx@tempb{abx@name@#1}%
  \csundef{abx@name@#1}%
  \blx@getdata{\blx@tempa}%
  \blx@imc@ifnameequals{#1}\blx@tempb
    {\aftergroup\@firstoftwo}
    {\aftergroup\@secondoftwo}%
  \endgroup}

% {<string>}{<true>}{<false>}

\protected\def\blx@imc@ifcurrentfield#1{%
  \begingroup
  \def\blx@tempa{#1}%
  \ifx\currentfield\blx@tempa
    \aftergroup\@firstoftwo
  \else
    \aftergroup\@secondoftwo
  \fi
  \endgroup}

% {<string>}{<true>}{<false>}

\protected\def\blx@imc@ifcurrentlist#1{%
  \begingroup
  \def\blx@tempa{#1}%
  \ifx\currentlist\blx@tempa
    \aftergroup\@firstoftwo
  \else
    \aftergroup\@secondoftwo
  \fi
  \endgroup}

% {<string>}{<true>}{<false>}

\protected\def\blx@imc@ifcurrentname#1{%
  \begingroup
  \def\blx@tempa{#1}%
  \ifx\currentname\blx@tempa
    \aftergroup\@firstoftwo
  \else
    \aftergroup\@secondoftwo
  \fi
  \endgroup}

% {<string>}{<true>}{<false>}

\protected\def\blx@imc@ifentrytype#1{%
  \begingroup
  \def\blx@tempa{#1}%
  \ifx\abx@field@entrytype\blx@tempa
    \aftergroup\@firstoftwo
  \else
    \aftergroup\@secondoftwo
  \fi
  \endgroup}

% {<true>}{<false>}

\def\blx@imc@ifmorenames{%
  \ifundef\currentname
    {\@secondoftwo}
    {\iftoggle{abx@bool@more\currentname}
       {\@firstoftwo}
       {\ifnum\c@listtotal>\c@liststop
          \expandafter\@firstoftwo
        \else
          \expandafter\@secondoftwo
        \fi}}}

% {<true>}{<false>}

\def\blx@imc@ifmoreitems{%
  \ifundef\currentlist
    {\@secondoftwo}
    {\iftoggle{abx@bool@more\currentlist}
       {\@firstoftwo}
       {\ifnum\c@listtotal>\c@liststop
          \expandafter\@firstoftwo
        \else
          \expandafter\@secondoftwo
        \fi}}}

% {<category>}{<true>}{<false>}

\protected\def\blx@imc@ifcategory{%
  \ifdef\abx@field@entrykey
    {\blx@imc@ifentrycategory\abx@field@entrykey}
    {\expandafter\@secondoftwo\@gobble}}

% {<entrykey>}{<category>}{<true>}{<false>}

\protected\def\blx@imc@ifentrycategory{%
  \blx@xsanitizeafter\blx@imc@ifentrycategory@i}

\def\blx@imc@ifentrycategory@i#1#2{%
  \ifcsdef{blx@catg@\detokenize{#2}}
    {\ifinlistcs{#1}{blx@catg@\detokenize{#2}}}
    {\@secondoftwo}}

% {<keyword>}{<true>}{<false>}

\protected\def\blx@imc@ifkeyword{%
  \ifdef\abx@field@entrykey
    {\blx@imc@ifentrykeyword\abx@field@entrykey}
    {\expandafter\@secondoftwo\@gobble}}

% {<entrykey>}{<keyword>}{<true>}{<false>}

\protected\def\blx@imc@ifentrykeyword{%
  \blx@xsanitizeafter\blx@imc@ifentrykeyword@i}

\def\blx@imc@ifentrykeyword@i#1#2{%
  \ifcsdef{blx@keyw@\the\c@refsection @\detokenize{#2}}
    {\ifinlistcs{#1}{blx@keyw@\the\c@refsection @\detokenize{#2}}}
    {\@secondoftwo}}

% {<true>}{<false>}

\protected\def\blx@ifciteseen@global{%
  \ifdef\abx@field@entrykey
    {\expandafter\blx@ifseen@global
     \expandafter{\abx@field@entrykey}}
    {\@secondoftwo}}

\protected\def\blx@ifciteseen@context{%
  \ifdef\abx@field@entrykey
    {\expandafter\blx@ifseen@context
     \expandafter{\abx@field@entrykey}}
    {\@secondoftwo}}

% {<entrykey>}{<true>}{<false>}

\protected\def\blx@ifentryseen@global{%
  \blx@xsanitizeafter\blx@ifseen@global}

\protected\def\blx@ifentryseen@context{%
  \blx@xsanitizeafter\blx@ifseen@context}

\def\blx@ifseen@global#1{%
  \ifinlistcs{#1}{blx@bsee@\the\c@refsection}}

\def\blx@ifseen@context#1{%
  \iftoggle{blx@footnote}
    {\ifinlistcs{#1}{blx@fsee@\the\c@refsection}}
    {\ifinlistcs{#1}{blx@bsee@\the\c@refsection}}}

% {<true>}{<false>}

\def\blx@ifciteibid@global{%
  \blx@imc@iffieldequals{entrykey}\blx@lastkey@text}

\def\blx@ifciteibid@context{%
  \iftoggle{blx@footnote}
    {\blx@imc@iffieldequals{entrykey}\blx@lastkey@foot}
    {\blx@imc@iffieldequals{entrykey}\blx@lastkey@text}}

\def\blx@ifciteibid@strict{%
  \blx@ifcitesingle
    {\blx@ifciteibid@global}
    {\@secondoftwo}}%

\def\blx@ifciteibid@constrict{%
  \blx@ifcitesingle
    {\iftoggle{blx@footnote}
       {\blx@ifmpfncheck
          {\blx@imc@iffieldequals{entrykey}\blx@lastkey@foot}
          {\@secondoftwo}}
       {\blx@imc@iffieldequals{entrykey}\blx@lastkey@text}}
    {\@secondoftwo}}%

% {<true>}{<false>}

\def\blx@ifciteidem@global{%
  \blx@imc@iffieldequals{fullhash}\blx@lasthash@text}

\def\blx@ifciteidem@context{%
  \iftoggle{blx@footnote}
    {\blx@imc@iffieldequals{fullhash}\blx@lasthash@foot}
    {\blx@imc@iffieldequals{fullhash}\blx@lasthash@text}}

\let\blx@ifciteidem@strict\blx@ifciteidem@global

\def\blx@ifciteidem@constrict{%
  \iftoggle{blx@footnote}
    {\blx@ifmpfncheck
       {\blx@imc@iffieldequals{fullhash}\blx@lasthash@foot}
       {\@secondoftwo}}
    {\blx@imc@iffieldequals{fullhash}\blx@lasthash@text}}

% {<true>}{<false>}

\def\blx@ifopcit@global{%
  \blx@imc@iffieldundef{namehash}
    {\@secondoftwo}
    {\blx@imc@iffieldequalcs{entrykey}{blx@lastkey@text@\abx@field@namehash}}}

\def\blx@ifopcit@context{%
  \blx@imc@iffieldundef{namehash}
    {\@secondoftwo}
    {\iftoggle{blx@footnote}
       {\blx@imc@iffieldequalcs{entrykey}{blx@lastkey@foot@\abx@field@namehash}}
       {\blx@imc@iffieldequalcs{entrykey}{blx@lastkey@text@\abx@field@namehash}}}}

\def\blx@ifopcit@strict{%
  \blx@ifcitesingle
    {\blx@ifopcit@global}
    {\@secondoftwo}}%

\def\blx@ifopcit@constrict{%
  \blx@ifcitesingle
    {\blx@imc@iffieldundef{namehash}
       {\@secondoftwo}
       {\iftoggle{blx@footnote}
	  {\blx@ifmpfncheck
             {\blx@imc@iffieldequalcs{entrykey}{blx@lastkey@foot@\abx@field@namehash}}
             {\@secondoftwo}}
	  {\blx@imc@iffieldequalcs{entrykey}{blx@lastkey@text@\abx@field@namehash}}}}
    {\@secondoftwo}}%

% {<true>}{<false>}

\def\blx@ifloccit@global{%
  \blx@loccit@check{text}}

\def\blx@ifloccit@context{%
  \iftoggle{blx@footnote}
    {\blx@loccit@check{foot}}
    {\blx@loccit@check{text}}}

\def\blx@ifloccit@strict{%
  \blx@ifcitesingle
    {\blx@loccit@numcheck{text}}
    {\@secondoftwo}}%

\def\blx@ifloccit@constrict{%
  \blx@ifcitesingle
    {\iftoggle{blx@footnote}
       {\blx@ifmpfncheck
          {\blx@loccit@numcheck{foot}}
          {\@secondoftwo}}
       {\blx@loccit@numcheck{text}}}
    {\@secondoftwo}}

\def\blx@loccit@check#1{%
  \blx@imc@iffieldundef{postnote}
    {\@secondoftwo}
    {\blx@imc@iffieldequalcs{postnote}{blx@lastnote@#1@\abx@field@entrykey}}}

\def\blx@loccit@numcheck#1{%
  \blx@imc@iffieldundef{postnote}
    {\@secondoftwo}
    {\expandafter\blx@imc@ifpages
     \expandafter{\abx@field@postnote}
       {\blx@imc@iffieldequalcs{postnote}{blx@lastnote@#1@\abx@field@entrykey}}
       {\@secondoftwo}}}

% {<true>}{<false>}

\def\blx@ifmpfncheck{%
  \ifnum\numexpr\value\@mpfn-\blx@lastmpfn<\tw@
    \expandafter\@firstoftwo
  \else
    \expandafter\@secondoftwo
  \fi}

\def\blx@mpfnsave{%
  \xdef\blx@lastmpfn{\the\value\@mpfn}}

\def\blx@mpfnreset{%
  \global\let\blx@lastmpfn\z@}

\blx@mpfnreset

% {<true>}{<false>}

\def\blx@imc@iffirstonpage{%
  \iftoggle{blx@footnote}
    {\blx@iffirstonpage{fnpage}}
    {\blx@iffirstonpage{page}}}

\def\blx@iffirstonpage#1{%
  \ifcsundef{blx@#1@\number\c@instcount}
    {\@secondoftwo}
    {\expandafter\blx@iffirstonpage@i
     \expandafter{\number\numexpr\c@instcount-1}{#1}}}

\def\blx@iffirstonpage@i#1#2{%
  \ifcsundef{blx@#2@#1}
    {\ifnum#1>\@ne
       \expandafter\@firstoftwo
     \else
       \expandafter\@secondoftwo
     \fi
     {\expandafter\blx@iffirstonpage@i
      \expandafter{\number\numexpr#1-1}{#2}}
     {\@firstoftwo}}
    {\ifnum\csuse{blx@#2@\number\c@instcount}=%
           \csuse{blx@#2@#1} %
       \expandafter\@secondoftwo
     \else
       \expandafter\@firstoftwo
     \fi}}

% {<count1>}{<count2>}{<true>}{<false>}

\def\blx@imc@ifsamepage#1#2{%
  \ifcsundef{blx@page@\number\numexpr#1}
    {\ifcsundef{blx@fnpage@\number\numexpr#1}
       {\@secondoftwo}
       {\blx@ifsamepage{#1}{#2}{fnpage}}}
    {\blx@ifsamepage{#1}{#2}{page}}}

\def\blx@ifsamepage#1#2#3{%
  \ifcsundef{blx@page@\number\numexpr#2}
    {\ifcsundef{blx@fnpage@\num
	